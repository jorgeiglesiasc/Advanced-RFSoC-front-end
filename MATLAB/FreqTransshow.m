%----------------------------------------------------------------------------------
%--
%-- Company: CTTC
%-- Author: Jorge Iglesias, 2024. jorgeiglesiascostas(at)gmail.com
%--
%-- File Name: FreqTransshow
%-- Target Devices: RFSoC4x2 and ZCU208
%-- Tool Versions: R2020a
%-- Description: Shows the input and the output samples of the Frequency Translator 
%                VitisHLS testbench through various graphs, to observe the signal 
%                through a spectrum analyser, an oscilloscope and a spectrogram 
%                digitally
%--
%----------------------------------------------------------------------------------
%--
%-- Advanced-RFSoC-front-end is an Advanced multi-band GNSS SDR front-end
%                                  implementation in an RFSoC integrated circuit
%-- This file is part of Advanced-RFSoC-front-end
%--
%-- Copyright (C) 2024 (see AUTHORS file for a list of contributors)
%-- SPDX-License-Identifier: GPL-3.0-or-later
%--
%----------------------------------------------------------------------------------
close all;
clear all;
N= 1024*10; %Number of samples, it has to be the same value as N_SAMPLES in tb_freq_translator.cc in VitisHLS

%Read the data from the files generated by VitisHLS testbench, the path has to be modified to the corresponding one
data_in = read_complex_gr_complex_binary('/home/cttc/jorge/VitisHLS/freq_translator_project/freq_translator/solution1/csim/build/Freq_trans_in_samples.dat', N, 0);
data_out = read_complex_gr_complex_binary('/home/cttc/jorge/VitisHLS/freq_translator_project/freq_translator/solution1/csim/build/Freq_trans_out_samples.dat', N, 0);

Fs=1.024e6; %Frequency sampling, it has to be the same value as f_s in tb_freq_translator.cc in VitisHLS
n=0:1:N-1;
Ts=1/Fs;
F_tone=Fs/16; %Tone frequency, it has to be the same value as f_tone in tb_freq_translator.cc in VitisHLS
F_nco=Fs/32; %NCO frequency, it has to be the same value as f_nco in tb_freq_translator.cc in VitisHLS

%Figure to analyze the Frequency Translator response
figure(1)
subplot(2,3,1)
pwelch(data_in,[],[],[],Fs,'centered','power');
title('FFT FreqTrans input signal');

subplot(2,3,4)
pwelch(data_out,[],[],[],Fs,'centered','power');
title('FFT FreqTrans output signal');

subplot(2,3,2)
plot(real(data_in));
title('FreqTrans input signal');
hold on
plot(imag(data_in),'r');

subplot(2,3,5)
plot(real(data_out));
title('FreqTrans output signal');
hold on
plot(imag(data_out),'r');

subplot(2,3,3)
spectrogram(data_in,1024);
title('FreqTrans input spectrogram');

subplot(2,3,6)
spectrogram(data_out,1024);
title('FreqTrans output spectrogram');

%Figure to compare the frequency translation of the original signal with the Frequency Translator and with MATLAB
figure(2)
subplot(2,2,1)
pwelch(data_in,[],[],[],Fs,'centered','power');
title('FFT FreqTrans input signal');

subplot(2,2,3)
pwelch(data_out,[],[],[],Fs,'centered','power');
title('FFT FreqTrans output signal');

subplot(2,2,2)
in=exp(1i*2*pi*F_tone*Ts*n);
pwelch(in,[],[],[],Fs,'centered','power');
title('FFT FreqTrans input matlab');

subplot(2,2,4)
out=in.*(cos(2*pi*F_nco*Ts*n)-1i*sin(2*pi*F_nco*Ts*n));
pwelch(out,[],[],[],Fs,'centered','power');
title('FFT FreqTrans output matlab');
